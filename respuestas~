24 

1.9.3p194 :001 > a = 4
 => 4 
1.9.3p194 :002 > b = 2
 => 2 
1.9.3p194 :003 > c = <<HERE
1.9.3p194 :004"> --#{a}--
1.9.3p194 :005"> --#{b}--
1.9.3p194 :006"> HERE
 => "--4--\n--2--\n"


25

1.9.3p194 :007 > c = <<'HERE'
1.9.3p194 :008'> --#{a}--
1.9.3p194 :009'> --#{b}--
1.9.3p194 :010'> HERE
 => "--\#{a}--\n--\#{b}--\n"

26

s = "hello"

1.9.3p194 :013 >   s[0,2]
 => "he" 
1.9.3p194 :014 > s[-1,1]
 => "o" 
1.9.3p194 :015 > s[0,10]
 => "hello"


27

1.9.3p194 :016 > g = "hello"
 => "hello" 
1.9.3p194 :017 > g << " world"
 => "hello world"

28

1.9.3p194 :019 > e = '.'*3
 => "..." 


29

1.9.3p194 :020 > a = 1
 => 1 
1.9.3p194 :021 > "#{a=a+1} "*3
 => "2 2 2 "

30

1.9.3p194 :022 > %w[this is a test]
 => ["this", "is", "a", "test"]

31

1.9.3p194 :023 > %w[\t \n]
 => ["\\t", "\\n"] 

32

1.9.3p194 :024 > %W[\t \n]
 => ["\t", "\n"]


33
1.9.3p194 :025 > nils = Array.new(3)
 => [nil, nil, nil]

34
1.9.3p194 :026 > zeros = Array.new(3, 0)
 => [0, 0, 0] 

35
1.9.3p194 :027 > x = [[1,2],[3,4]]
 => [[1, 2], [3, 4]] 
1.9.3p194 :028 > b = Array.new(x)
 => [[1, 2], [3, 4]]


36
1.9.3-p194 :001 > c = Array.new(3) { |i| 2*i }
 => [0, 2, 4] 

37

1.9.3-p194 :003 > a = ('a'..'e').to_a
 => ["a", "b", "c", "d", "e"] 
1.9.3-p194 :004 > a[1,1]
 => ["b"] 
1.9.3-p194 :005 > a[-2,2]
 => ["d", "e"] 
1.9.3-p194 :006 > a[0..2]
 => ["a", "b", "c"] 
1.9.3-p194 :007 > a[0...1]
 => ["a"] 
1.9.3-p194 :008 > a[-2..-1]
 => ["d", "e"]


38

1.9.3-p194 :009 > a
 => ["a", "b", "c", "d", "e"] 
1.9.3-p194 :010 > a[0,2] = %w{A B}
 => ["A", "B"] 
1.9.3-p194 :011 > a
 => ["A", "B", "c", "d", "e"] 
1.9.3-p194 :012 > a[2..5] = %w{C D E}
 => ["C", "D", "E"] 
1.9.3-p194 :013 > a
 => ["A", "B", "C", "D", "E"] 
1.9.3-p194 :014 > a[0,0] = [1,2,3]
 => [1, 2, 3] 
1.9.3-p194 :015 > a
 => [1, 2, 3, "A", "B", "C", "D", "E"] 
1.9.3-p194 :016 > a[0,2] = []
 => [] 
1.9.3-p194 :017 > a
 => [3, "A", "B", "C", "D", "E"] 
1.9.3-p194 :023 > a[-1,1] = [ 'Z' ]
 => ["Z"] 
1.9.3-p194 :024 > a
 => [3, "A", "B", "C", "D", "Z"] 
1.9.3-p194 :025 > a[-2,2] = nil
 => nil 
1.9.3-p194 :026 > a
 => [3, "A", "B", "C", nil] 
1.9.3-p194 :027 > 



39


1.9.3-p194 :043 >   a = (1...4).to_a
 => [1, 2, 3] 
1.9.3-p194 :044 > a = a + [4, 5]
 => [1, 2, 3, 4, 5] 
1.9.3-p194 :045 > a += [[6, 7, 8]]
 => [1, 2, 3, 4, 5, [6, 7, 8]] 
1.9.3-p194 :046 > a = a + 9
TypeError: can't convert Fixnum into Array
	from (irb):46:in `+'



40

1.9.3-p194 :047 > x = %w{a b c b a}
 => ["a", "b", "c", "b", "a"] 
1.9.3-p194 :048 > x = x - %w{b c d}
 => ["a", "a"] 

41

1.9.3-p194 :049 > z = [0]*8
 => [0, 0, 0, 0, 0, 0, 0, 0] 

42

1.9.3-p194 :056 >   a = []
 => [] 
1.9.3-p194 :057 > a << 1
 => [1] 
1.9.3-p194 :058 > a << 2 << 3
 => [1, 2, 3] 
1.9.3-p194 :059 > a << [4, 5, 6]
 => [1, 2, 3, [4, 5, 6]] 
1.9.3-p194 :060 > a.concat [7, 8]
 => [1, 2, 3, [4, 5, 6], 7, 8]


43

1.9.3-p194 :068 >   a = [1, 1, 2, 2, 3, 3, 4]
 => [1, 1, 2, 2, 3, 3, 4] 
1.9.3-p194 :069 > b = [5, 5, 4, 4, 3, 3, 2]
 => [5, 5, 4, 4, 3, 3, 2] 
1.9.3-p194 :070 > c = a | b
 => [1, 2, 3, 4, 5] 
1.9.3-p194 :071 > d = b | a
 => [5, 4, 3, 2, 1] 
1.9.3-p194 :072 > e = a & b
 => [2, 3, 4] 
1.9.3-p194 :073 > f = b & a
 => [4, 3, 2]

44

1.9.3-p194 :074 > a = 1..10
 => 1..10 
1.9.3-p194 :075 > a.class
 => Range 
1.9.3-p194 :076 > a.to_a
 => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 
1.9.3-p194 :077 > b = 1...10
 => 1...10 
1.9.3-p194 :078 > b.to_a
 => [1, 2, 3, 4, 5, 6, 7, 8, 9] 
1.9.3-p194 :079 > b.include? 10
 => false 
1.9.3-p194 :080 > b.include? 8
 => true 
1.9.3-p194 :081 > b.step(2) {|x| print "#{x} " }
1 3 5 7 9  => 1...10 						????????
1..3.to_a
NoMethodError: undefined method `to_a' for 3:Fixnum
	from (irb):82


45

1.9.3-p194 :091 > r = 0...100
 => 0...100 
1.9.3-p194 :092 > r.include? 99.9
 => true 
1.9.3-p194 :093 > r.member? 99.9
 => true 


46

1.9.3-p194 :106 >   true.class
 => TrueClass 
1.9.3-p194 :107 > false.class
 => FalseClass 
1.9.3-p194 :108 > puts "hello" if 0
hello
 => nil 
1.9.3-p194 :109 > puts "hello" if nil
 => nil 
1.9.3-p194 :110 > puts "hello" if ""
(irb):110: warning: string literal in condition
hello
 => nil 


47

1.9.3-p194 :126 > x = :sym
 => :sym 
1.9.3-p194 :127 > x.class
 => Symbol 
1.9.3-p194 :128 > x == 'sym'
 => false 
1.9.3-p194 :129 > x == :sym
 => true 
1.9.3-p194 :131 > z = :'a long symbol'
 => :"a long symbol" 
1.9.3-p194 :132 > z.class
 => Symbol 
1.9.3-p194 :133 > x == 'sym'.to_sym
 => true 
1.9.3-p194 :134 > x.to_s == 'sym'
 => true 


48				???????
1.9.3-p194 :135 > s = "Ruby"
 => "Ruby" 
1.9.3-p194 :136 > t = s
 => "Ruby" 
1.9.3-p194 :137 > t[-1] = ""
 => "" 
1.9.3-p194 :138 > print s
Rub => nil 
1.9.3-p194 :139 > t = "Java"
 => "Java" 
1.9.3-p194 :140 > print s, t
RubJava => nil 



49

1.9.3-p194 :150 >   "%d %s" % [3, "rubies"]
 => "3 rubies" 

50

1.9.3-p194 :158 >   x, y = 4, 5
 => [4, 5] 
1.9.3-p194 :159 > z = x > y ? x : y
 => 5 
1.9.3-p194 :160 > x,y,z = [1,2,3]
 => [1, 2, 3] 


51

1.9.3-p194 :173 >   x = { :a => 1, :b => 2 }
 => {:a=>1, :b=>2} 
1.9.3-p194 :174 > x.keys
 => [:a, :b] 
1.9.3-p194 :175 > x.values
 => [1, 2] 
1.9.3-p194 :176 > x[:c] = 3
 => 3 
1.9.3-p194 :177 > x
 => {:a=>1, :b=>2, :c=>3} 
1.9.3-p194 :179 > x.delete('a')
 => nil 
1.9.3-p194 :180 > x
 => {:a=>1, :b=>2, :c=>3} 
1.9.3-p194 :181 > x.delete(:a)
 => 1 
1.9.3-p194 :182 > x
 => {:b=>2, :c=>3} 
1.9.3-p194 :183 > x = { :a => 1, :b => 2, :c => 4 }
 => {:a=>1, :b=>2, :c=>4} 
1.9.3-p194 :184 > x.delete_if { |k,v| v % 2 == 0 }
 => {:a=>1} 
1.9.3-p194 :185 > x
 => {:a=>1} 


52


53
1.9.3-p194 :186 > counts = Hash.new(0)
 => {} 
1.9.3-p194 :187 > counts = {}
 => {}

54

1.9.3-p194 :188 > 'hello world, hello LPP'.scan /\w+/
 => ["hello", "world", "hello", "LPP"]

55

1.9.3-p194 :194 >   c = { :a => 3, :b => 2, :c => 1 }
 => {:a=>3, :b=>2, :c=>1} 
1.9.3-p194 :195 > c.keys.sort.each { |k| puts c[k] }
3
2
1
 => [:a, :b, :c] 


























































